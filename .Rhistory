a <- 3
library(ggplot2)
head(galaxies_df)
library(tidyverse)
#Code from Problem 2
file_path <- "C:/Users/abuba/Documents/Ban400/AssignmentGit/git-mohtar01/suites_dw_Table1.txt"
lines <- readLines(file_path)
#For the seperator line in the text
separator_line <- grep("^-----+", lines)
#Column names are one row above the seperator line
col_names <- str_split(lines[separator_line - 1], "\\|")[[1]]
col_names <- str_trim(col_names)
#The data comes after the seperator line, and is split by "\\|"
data_list <- lapply(lines[(separator_line + 1):length(lines)], function(line) {
str_split(line, "\\|")[[1]]
})
galaxies_df <- as.data.frame(do.call(rbind, data_list), stringsAsFactors = FALSE)
colnames(galaxies_df) <- col_names
#Remove white space
galaxies_df <- galaxies_df %>% mutate_all(str_trim)
head(galaxies_df)
ggplot(galaxies_df, aes(x = D, y = n())) + geom_point
ggplot(galaxies_df, aes(x = D, y = n())) + geom_point()
ggplot(galaxies_df, aes(x = D, y = n())) + geom_point()
ggplot(galaxies_df, aes(x = D, y = name) + geom_point()
ggplot(galaxies_df, aes(x = D, y = name) + geom_point()
ggplot(galaxies_df, aes(x = D, y = name) + geom_point()
ggplot(galaxies_df, aes(x = D, y = name) + geom_line()
head(galaxies_df)
head(galaxies_df)
colnames(galaxies_df)
# Histogram for a_26
ggplot(galaxies_df, aes(x = as.numeric(a_26))) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogram of a_26", x = "a_26", y = "Count") +
theme_minimal()
# Histogram for log_m26
ggplot(galaxies_df, aes(x = as.numeric(log_m26))) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black", alpha = 0.7) +
labs(title = "Histogram of log_m26", x = "log_m26", y = "Count") +
theme_minimal()
# Histogram for a_26
ggplot(galaxies_df, aes(x = as.numeric(a_26))) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogram of a_26", x = "a_26", y = "Count") +
theme_minimal()
# Histogram for log_m26
ggplot(galaxies_df, aes(x = as.numeric(log_m26))) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black", alpha = 0.7) +
labs(title = "Histogram of log_m26", x = "log_m26", y = "Count") +
theme_minimal()
# Histogram for a_26
ggplot(galaxies_df, aes(x = as.numeric(a_26))) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogram of a_26", x = "a_26", y = "Count") +
theme_minimal()
# Histogram for a_26
ggplot(galaxies_df, aes(x = as.numeric(a_26))) +
geom_histogram(binwidth = 0.5, fill = "blue", alpha = 0.7) +
labs(x = "a_26", y = "Count") +
# Histogram for log_m26
ggplot(galaxies_df, aes(x = as.numeric(log_m26))) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black", alpha = 0.7) +
labs(title = "Histogram of log_m26", x = "log_m26", y = "Count") +
theme_minimal()
# Histogram for a_26
ggplot(galaxies_df, aes(x = as.numeric(a_26))) +
geom_histogram(binwidth = 0.5, fill = "blue", alpha = 0.7) +
labs(x = "a_26", y = "Count") +
# Histogram for log_m26
ggplot(galaxies_df, aes(x = as.numeric(log_m26))) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black", alpha = 0.7) +
labs(title = "Histogram of log_m26", x = "log_m26", y = "Count") +
theme_minimal()
# Histogram for a_26
ggplot(galaxies_df, aes(x = as.numeric(a_26))) +
geom_histogram(binwidth = 0.5, alpha = 0.7) +
labs(x = "a_26", y = "Count") +
# Histogram for log_m26
ggplot(galaxies_df, aes(x = as.numeric(log_m26))) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black", alpha = 0.7) +
labs(title = "Histogram of log_m26", x = "log_m26", y = "Count") +
theme_minimal()
# Histogram for a_26
ggplot(galaxies_df, aes(x = as.numeric(a_26)) +
# Histogram for a_26
# Histogram for log_m26
# Histogram for a_26
geom_histogram(binwidth = 0.5, fill = "red", color = "black", alpha = 0.7) +
# Histogram for log_m26
# Histogram for log_m26
geom_histogram(binwidth = 0.5, fill = "red", color = "black", alpha = 0.7) +
setwd("C:/Users/abuba/Documents/Ban400/Iterations/iterations-mohtar01")
library(httr)
library(jsonlite)
library(ggplot2)
library(DescTools)
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(anytime)
library(readr)
library(yaml)
library(dplyr)
# Load function for posting GQL-queries and retrieving data:
source("functions/GQL_function.r")
configs <-
read_yaml("vegvesen_configs.yml")
gql_metadata_qry <- read_file("gql-queries/station_metadata.gql")
stations_metadata <-
GQL(
query=gql_metadata_qry,
.url = configs$vegvesen_url
)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
warnings()
head(stations_metadata_df,2)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
head(stations_metadata_df,2)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
head(stations_metadata_df,2)
head(stations_metadata_df,10)
head(stations_metadata_df,2)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
head(stations_metadata_df,2)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
head(stations_metadata_df,2)
#### 3: Testing metadata
source("functions/data_tests.r")
test_stations_metadata(stations_metadata_df)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
head(stations_metadata_df,2)
process_entry <- function(x) {
if (!is.null(x$latestData$volumeByHour) && grepl("^\\d+$", x$latestData$volumeByHour)) {
# Convert from Unix timestamp
datetime_str = as.POSIXct(as.numeric(x$latestData$volumeByHour), origin="1970-01-01", tz="UTC")
} else {
# Convert from ISO 8601 formatted date-time string
datetime_str = lubridate::ymd_hms(x$latestData$volumeByHour, tz="UTC")
}
list(
id = x$id,
name = x$name,
latestData = datetime_str,
lat = x$location$coordinates$latLon$lat,
lon = x$location$coordinates$latLon$lon
)
}
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
head(stations_metadata_df,2)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
head(stations_metadata_df,2)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
